const { ethers } = require("ethers");
const provider = new ethers.JsonRpcProvider(`https://mainnet.infura.io/v3/8b9750710d56460d940aeff47967c4ba`);

const addressUSDT = '0xdac17f958d2ee523a2206206994597c13d831ec7'; // usdt contract address
const accountBinance = '0x28C6c06298d514Db089934071355E5743bf21d60'

const ABI = [
  "event transfer(address indexed from, address indexed to, uint value)",
  "function balanceOf(address) public view returns(uint)",
];

// build contract object
const contractUSDT = new ethers.Contract(addressUSDT, ABI, provider);

main = async()=> {
  try {

// 1. Read the balance of USDT in Binance hot wallet
console.log("\n1. Read the balance of USDT in Binance hot wallet")
const balanceUSDT = await contractUSDT.balanceOf(accountBinance)
console.log(`USDT balance: ${ethers.formatUnits(balanceUSDT,6)}\n`)

 // 2. Create a filter to listen for USDT transfers into the exchange

console.log("\n2. Create a filter to listen for USDT transfers");
const filterBinance = contractUSDT.filters.transfer(null, accountBinance);
console.log("Filter details:", filterBinance);
const events = await contractUSDT.queryFilter(filterBinance);
console.log("Retrieved events:", events);

// 3. Create a filter to listen for usdt transfers from the exchange 
const filtertoBinanceOut = contractUSDT.filters.transfer(accountBinance, null);
console.log("\n3. Create a filter to listen for USDT transfers from Binance")
console.log("Filter details:")
console.log(filtertoBinanceOut);

// throws error here
contractUSDT.on(filtertoBinanceOut, (res) => {
  console.log('---------Listening for USDT transfers from Binance--------');
  console.log(
    `${res.args[0]} -> ${res.args[1]} ${ethers.formatUnits(res.args[2],6)}`
  )
  }
);
} catch (e) {
  console.log(e);

}
}
main()
