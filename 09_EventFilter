const { ethers } = require("ethers");
const provider = new ethers.JsonRpcProvider(`https://mainnet.infura.io/v3/8b9750710d56460d940aeff47967c4ba`);

const accountBinance ='0x28C6c06298d514Db089934071355E5743bf21d60'
const addressUSDT = '0xdAC17F958D2ee523a2206206994597C13D831ec7' //usdt contract address. 

const abi = [
  "event transfer(address indexed from, address indexed to, uint value)",
  "function balanceOf(address) public view returns(uint)",
];

const contractUSDT = new ethers.Contract(addressUSDT, abi, provider);

const main = async () => {
  try {
    console.log("\n1. Read the balance of USDT in Binance hot wallet");
    const balanceUSDT = await contractUSDT.balanceOf(accountBinance);
    console.log(`Usdt balance: ${ethers.formatUnits(balanceUSDT,6)}\n`);

    console.log("\n2. Create a filter to listen for USDT transfers");
    const filterBinanceIn = contractUSDT.filters.transfer(null, accountBinance);
    console.log("Filter details:");
    console.log(filterBinanceIn);
    contractUSDT.on(filterBinanceIn, (res) => {
      console.log('-----------listen for usdt transfers into the  exchnage-------');
      console.log(
        `${res.args[0]} -> ${res.args[1]} ${ethers.formatUnits(res.args[2],6)}`
      )
    })

    const filterToBinanceOut = contractUSDT.filters.transfer(accountBinance);
    console.log("\n3. create a filter to listen for usdt transfers out of the Binance account")
    console.log("Filter details:")
    console.log(filterToBinanceOut);
    contractUSDT.on(filterToBinanceOut, (res) => {
      console.log('---------listen for usdt transfers out of the exchnage-----');
      console.log(`${res.args[0]} -> ${res.args[1]} ${ethers.formatUnits(res.args[2],6)}`
      )
    })
     
  } catch (error) {
    console.error("Error:", error);
  }
}
main();
